Ideas:

I believe pitches are shown in the data in the exact time they occur no matter
what game that pitch was thrown in. This makes the games all interconnected. 

To get data on pitch sequencing, we have to order the dataset correctly for the
whole season.

Not sure how this will be stored but the rough first try at creating this should
be for the pitches to first be grouped by game_id, which is one of the fields in
the dataset. Then group those by the at_bat_number of the particular game.

After that, all at bats will be grouped. Then order the pitches in the at bat by
the pitch_number, which specifies which pitch of the at bat it was. 

Once all this is completed, then I will be able to write queries about the
different pitches when being preceded by a specific pitch and look for actionable
data that I can use.

NOTE: The above theory worked out but don't want to delete it so the history of the ideas page
will be preserved


I think I have found a solution to my problem for not being able to get the BABIP
by pitch sequencing.

I am having the problem that the hits row number is less than the balls in play
column for the same pitch sequences because less seen sequences have never ended
with a hit. This creates less rows and is not easy for me to quickly find BABIP
for all sequencing without doing it by hand. So I think the fix is simple. I will
create 2 different tables in the DB for the balls in play and the hits. Then, I
run a query joining those two tables with an inner join over the current pitch type.
When that is done, all the columns should be set up for when there is no occurrances
of hits for that sequence, it will return 0 or NULL in the table. After that,
I will have to figure out how to place the default value of 0 in for hits in the
sequences that have not recorded hits. 

If this gets me past the problem of not being able to figure out BABIP easily, I will
write it here.

